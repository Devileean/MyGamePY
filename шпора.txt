В итоге каркас игры на Pygame должен выглядеть примерно так:

# здесь подключаются модули
import pygame
import sys

# здесь определяются константы,
# классы и функции
FPS = 60

# здесь происходит инициация,
# создание объектов
pygame.init()
pygame.display.set_mode((600, 400))
clock = pygame.time.Clock()

# если надо до цикла отобразить
# какие-то объекты, обновляем экран
pygame.display.update()

# главный цикл
while True:

    # задержка
    clock.tick(FPS)

    # цикл обработки событий
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            sys.exit()

    # --------
    # изменение объектов
    # --------

    # обновление экрана
    pygame.display.update()

_________________________________________________________________________________________________________________

Геометрические фигуры

# r = pygame.Rect(50, 50, 100, 200)
# c = (255, 255, 0)
# pygame.draw.rect(screen, (255, 255, 0), r, 0)
# pygame.draw.rect(screen, (255, 255, 0), r, width=1)
# pygame.draw.circle(screen, (255, 255, 0), (200, 200), 10, width=1)
# pygame.draw.line(screen, (255, 255, 0), [100, 100], [1000, 10], 3)
# pygame.draw.polygon(screen, c, [[10, 10], [10, 80], [90, 80], [90, 10]], width=1)
# pygame.draw.ellipse(screen, c, r,width=1)

_________________________________________________________________________________________________________________

Анимация круга

FPS = 60
WIN_WIDTH = 800
WIN_HEIGHT = 100
WHITE = (255, 255, 0)
ORANGE = (255, 150, 100)

clock = pygame.time.Clock()
sc = pygame.display.set_mode(
    (WIN_WIDTH, WIN_HEIGHT))

# радиус будущего круга
r = 30
# координаты круга
# скрываем за левой границей
x = 0 - r
# выравнивание по центру по вертикали
y = WIN_HEIGHT // 2

while 1:
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            sys.exit()

    # заливаем фон
    sc.fill(WHITE)
    # рисуем круг
    pygame.draw.circle(sc, ORANGE,
                       (x, y), r)
    # обновляем окно
    pygame.display.update()

    # Если круг полностью скрылся
    # за правой границей,
    if x >= WIN_WIDTH + r:
        # перемещаем его за левую
        x = 0 - r
    else:  # Если еще нет,
        # на следующей итерации цикла
        # круг отобразится немного правее
        x += 2

    clock.tick(FPS)

_________________________________________________________________________________________________________________